{
  "gw": {
    "cpu": 4,
    "memory": 4096,
    "disk": "40G"
  },
  "K8s_version_short": "v1.28",
  "directories": ["esxi","yaml-files", ".kube", "openssl", "routes", "vault", "traffic_gen", "lbaas", "tkgm", "tkgm/workload_clusters", "tkgm/mgmt_cluster", "tkgm/bin", "tkc", "unmanaged_k8s_clusters", "templates", "bin", "k8s", "python", ".ssh"],
  "folders_to_copy": ["vcenter", "nsx", "avi", "app", "tanzu", "templates", "bash", "json"],
  "apt_packages": ["vault", "python3-pip", "jq", "unzip", "expect", "python3-jmespath", "sshpass", "nginx", "chrony", "bind9", "bind9utils", "dnsutils", "xorriso", "expect", "iptables-persistent"],
  "pip3_packages": ["ansible-core==2.12.5", "ansible==5.7.1", "avisdk", "gunicorn", "dnspython", "netaddr", "yq==3.2.2", "flask", "flask_restful", "flask_cors", "pyvmomi"],
  "yaml_folder": "yaml-files",
  "yaml_links": [
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/mixed-protocols-app/mixed-protocols-svc-app.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/sctp_cnf/sctp-cnf.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/sctp_cnf/sctp-client.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-apps.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-ingress.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-ingress-np.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-crd-1.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-crd-2.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-http-crd-3.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-LB-1.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-LB-2.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-LB-3.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-nodeport-1.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-nodeport-2.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-svc-nodeport-3.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-single-listener.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-multiple-listeners.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-1.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-2.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-3.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-multiple-1-2.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-1_based-on-np.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-2_based-on-np.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-3_based-on-np.yml",
    "https://raw.githubusercontent.com/tacobayle/k8sYaml/master/demo-http-apps/demo-gw-http-route-multiple-1-2_based-on-np.yml"
  ],
  "vault": {
    "control_script": {
      "name": "vault_control_script",
      "path": "/home/ubuntu/templates/control-script-vault.py"
    },
    "certificate_mgmt_profile": {
      "name": "vault_cert_profile"
    },
    "secret_file_path": "/home/ubuntu/vault/secret.json",
    "pki": {
      "name": "pki",
      "max_lease_ttl": "87600h",
      "cert":{
        "common_name": "vault.com",
        "issuer_name": "vault_demoavi",
        "ttl": "87600h",
        "path": "/home/ubuntu/vault/ca.crt"
      },
      "issuers_file": "/home/ubuntu/vault/ca_issuers.json",
      "role": {
        "name": "role-pki-ca"
      }
    },
    "pki_intermediate": {
      "name": "pki_int",
      "max_lease_ttl": "43800h",
      "cert":{
        "common_name": "intermediate-vault.com",
        "issuer_name": "demoavi",
        "path": "/home/ubuntu/vault/pki_intermediate.csr",
        "path_signed": "/home/ubuntu/vault/pki_intermediate.cert.pem"
      },
      "role": {
        "name": "pki_intermediate_role",
        "allow_subdomains": true,
        "max_ttl": "1440h"
      }
    }
  },
  "ips_esxi": [11, 12, 13],
  "ip_vsphere": 10,
  "dc": "dc01",
  "cluster_basename": "cluster0",
  "esxi_basename": "esxi0",
  "vcsa_name": "vcsa-01",
  "vds_switches": [
    {
      "name": "vds1",
      "discovery_protocol": "lldp",
      "version": "7.0.2",
      "mtu": 1500,
      "pnic": "vmnic0"
    }
  ],
  "port_groups": [
    {
      "name": "mgmt",
      "vds_ref": "vds1",
      "type": "MANAGEMENT",
      "scope": "mgmt"
    },
    {
      "name": "mgmt-vmk",
      "vds_ref": "vds1",
      "vmk": "vmk3",
      "old_vmk": "vmk0",
      "type": "MANAGEMENT"
    },
    {
      "name": "VSAN",
      "vds_ref": "vds1",
      "vmk": "vmk4",
      "old_vmk": "vmk2",
      "type": "VSAN"
    },
    {
      "name": "vMotion",
      "vds_ref": "vds1",
      "vmk": "vmk5",
      "old_vmk": "vmk1",
      "type": "VMOTION"
    }
  ],
  "port_groups_vsphere_avi": [
    {
      "name": "avi-se-mgmt",
      "vds_ref": "vds1"
    },
    {
      "name": "avi-app-backend",
      "vds_ref": "vds1"
    },
    {
      "name": "avi-vip",
      "vds_ref": "vds1"
    },
    {
      "name": "tanzu",
      "vds_ref": "vds1"
    }
  ],
  "port_groups_nsx": [
    {
      "name": "nsx-external",
      "vds_ref": "vds1",
      "scope": "nsx-external"
    },
    {
      "name": "nsx-overlay",
      "vds_ref": "vds1",
      "scope": "nsx-overlay"
    },
    {
      "name": "nsx-overlay-edge",
      "vds_ref": "vds1",
      "scope": "nsx-overlay-edge"
    }
  ],
  "disks": {
    "capacity": "mpx.vmhba0:C0:T2:L0",
    "cache": "mpx.vmhba0:C0:T1:L0"
  },
  "nsx": {
    "folder": "nsx-manager",
    "manager_name": "nsx-manager-01",
    "ip_manager": 14,
    "ips_edge": [15, 16],
    "pool_start": 32,
    "pool_end": 64,
    "config" : {
      "uplink_profiles":
      [
        {
          "display_name": "uplink-profile-esx",
          "resource_type": "PolicyUplinkHostSwitchProfile",
          "transport_vlan": "dummy",
          "teaming": {
            "policy": "FAILOVER_ORDER",
            "active_list": [
              {
                "uplink_name": "uplink-1",
                "uplink_type": "PNIC"
              }
            ]
          }
        },
        {
          "display_name": "uplink-profile-edge",
          "resource_type": "PolicyUplinkHostSwitchProfile",
          "transport_vlan": 0,
          "teaming": {
            "policy": "FAILOVER_ORDER",
            "active_list": [
              {
                "uplink_name": "uplink-1",
                "uplink_type": "PNIC"
              }
            ]
          }
        }
      ],
      "transport_zones":
      [
        {
          "display_name": "tz_overlay",
          "transport_type": "OVERLAY"
        },
        {
          "display_name": "tz_vlan",
          "transport_type": "VLAN"
        }
      ],
      "ip_pools":
      [
        {
          "display_name": "ip_pool_tep_tn",
          "resource_type": "IpAddressPoolStaticSubnet"
        },
        {
          "display_name": "ip_pool_tep_edge",
          "resource_type": "IpAddressPoolStaticSubnet"
        }
      ],
      "segments":
      [
        {
          "display_name": "segment-external",
          "vlan_ids": [0],
          "transport_zone": "tz_vlan",
          "description": "Segment configured for tier0 external connectivity",
          "nsx_external": true
        }
      ],
      "transport_node_profiles":
      [
        {
          "display_name": "tnp-cluster",
          "description": "descr1",
          "resource_type": "PolicyHostTransportNodeProfile",
          "host_switch_spec": {
            "resource_type": "StandardHostSwitchSpec",
            "host_switches": [
              {
                "host_switch_mode": "STANDARD",
                "host_switch_vds_name_ref": "vds1",
                "host_switch_id": "this will be retrieved",
                "host_switch_name": "nsx-overlay",
                "host_switch_profile_ids": [
                  {
                    "key": "UplinkHostSwitchProfile",
                    "value": "/infra/host-switch-profiles/uplink-profile-esx"
                  }
                ],
                "host_switch_type": "VDS",
                "ip_assignment_spec": {
                  "ip_pool_id": "/infra/ip-pools/ip_pool_tep_tn",
                  "resource_type": "StaticIpPoolSpec"
                },
                "transport_zone_endpoints": [
                  {
                    "transport_zone_ref": "tz_overlay",
                    "transport_zone_id": "this will be retrieved",
                    "transport_zone_profile_ids": []
                  },
                  {
                    "transport_zone_ref": "tz_vlan",
                    "transport_zone_id": "this will be retrieved",
                    "transport_zone_profile_ids": []
                  }
                ],
                "uplinks": [
                  {
                    "uplink_name": "uplink-1",
                    "vds_uplink_name": "uplink1"
                  }
                ]
              }
            ]
          }
        }
      ],
      "dhcp_servers":
      [
        {
          "display_name": "dhcp-0",
          "server_address": "100.65.222.1/30",
          "lease_time": 86400
        }
      ],
      "nsx_groups": [
        {
          "display_name" : "Avi-se",
          "expression" : [
            {
              "member_type" : "VirtualMachine",
              "key" : "Name",
              "operator" : "STARTSWITH",
              "value" : "Avi-se",
              "resource_type" : "Condition"
            }
          ]
        }
      ],
      "exclusion_list_groups": ["/infra/domains/default/groups/Avi-se"],
      "edge_node": {
        "basename": "edge0",
        "data_network": "segment2",
        "host_switch_spec": {
          "host_switches": [
            {
              "host_switch_name": "nsxHostSwitch_overlay",
              "host_switch_type": "NVDS",
              "host_switch_mode": "STANDARD",
              "host_switch_profile_names": [
                "uplink-profile-edge"
              ],
              "pnics": [
                {
                  "device_name": "fp-eth0",
                  "uplink_name": "uplink-1"
                }
              ],
              "ip_pool_name": "ip_pool_tep_edge",
              "transport_zone_names": [
                "tz_overlay"
              ]
            },
            {
              "host_switch_name": "nsxHostSwitch_external",
              "host_switch_type": "NVDS",
              "host_switch_mode": "STANDARD",
              "host_switch_profile_names": [
                "uplink-profile-edge"
              ],
              "pnics": [
                {
                  "device_name": "fp-eth1",
                  "uplink_name": "uplink-1"
                }
              ],
              "transport_zone_names": [
                "tz_vlan"
              ]
            }
          ]
        }
      },
      "edge_clusters":
      [
        {
          "display_name": "edge-cluster-01",
          "members": [
            {
              "display_name": "edge-01"
            },
            {
              "display_name": "edge-02"
            }
          ]
        }
      ],
      "tier0s":
      [
        {
          "display_name": "tier0-01",
          "edge_cluster_name": "edge-cluster-01",
          "ha_mode": "ACTIVE_STANDBY",
          "interfaces": [
            {
              "edge_name": "edge-01",
              "segment_name": "segment-external",
              "type": "EXTERNAL",
              "display_name": "if-ext-0"
            },
            {
              "edge_name": "edge-02",
              "segment_name": "segment-external",
              "type": "EXTERNAL",
              "display_name": "if-ext-1"
            }
          ],
          "static_routes": [
            {
              "display_name": "default-route",
              "network": "0.0.0.0/0",
              "next_hops": [
                {
                  "ip_address": "172.16.130.100"
                }
              ]
            }
          ],
          "ha_vips": [
            {
              "interfaces": [
                "if-ext-0",
                "if-ext-1"
              ]
            }
          ]
        }
      ],
      "tier1s":
      [
        {
          "tier0": "tier0-01",
          "display_name": "tier1-01",
          "edge_cluster_name": "edge-cluster-01",
          "ha_mode": "ACTIVE_STANDBY",
          "lb": true,
          "dhcp_server": "dhcp-0",
          "route_advertisement_types": [
            "TIER1_STATIC_ROUTES",
            "TIER1_CONNECTED",
            "TIER1_LB_VIP"
          ]
        },
        {
          "tier0": "tier0-01",
          "display_name": "tier1-02",
          "dhcp_server": "dhcp-0",
          "route_advertisement_types": [
            "TIER1_STATIC_ROUTES",
            "TIER1_CONNECTED",
            "TIER1_LB_VIP"
          ]
        }
      ],
      "segments_overlay":
      [
        {
          "display_name": "segment-mgmt-avi",
          "tier1": "tier1-01",
          "transport_zone": "tz_overlay",
          "dhcp_ranges": ["50-99"]
        },
        {
          "display_name": "segment-mgmt-tanzu-supervisor",
          "tier1": "tier1-01",
          "tanzu_supervisor_starting_ip": "130",
          "tanzu_supervisor_count": 5,
          "transport_zone": "tz_overlay",
          "dhcp_ranges": ["50-99"]
        },
        {
          "display_name": "segment-server-1",
          "tier1": "tier1-01",
          "dhcp_ranges": ["50-99"],
          "ips_app_first": ["11", "12"],
          "transport_zone": "tz_overlay",
          "backend": true,
          "ips_app_second": ["13", "14"]
        },
        {
          "display_name": "segment-server-2",
          "tier1": "tier1-02",
          "dhcp_ranges": ["50-99"],
          "transport_zone": "tz_overlay",
          "backend": true,
          "ips_app_first": ["11"]
        },
        {
          "display_name": "segment-vip-1",
          "tier1": "tier1-01",
          "dhcp_ranges": ["50-99"],
          "transport_zone": "tz_overlay",
          "kube": true,
          "lbaas_private": true
        },
        {
          "display_name": "segment-vip-2",
          "tier1": "tier1-02",
          "dhcp_ranges": ["50-99"],
          "transport_zone": "tz_overlay",
          "lbaas_public": true
        }
      ],
      "segment_overlay_file": "/tmp/segments_overlay.json"
    }
  },
  "avi": {
    "ip_controller": 18,
    "ipam_pool": "100-149",
    "ips_se_lsc": [151, 152],
    "ipam_pool_lsc": "160-179",
    "client": {
      "ips": [11, 12, 13]
    },
    "app": {
      "first": {
        "ips": [11, 12]
      },
      "second": {
        "ips": [13, 14]
      }
    },
    "kube_starting_ip": 21
  },
  "avi_folder": "avi-ctrl",
  "avi_ctrl_name": "avi-ctrl-01",
  "avi_lsc_se_folder": "lsc-se",
  "avi_lsc_kernel_version": "4.4.0-21-generic",
  "avi_lsc_se_basename": "lsc-se0",
  "avi_lsc_se_cpu": 1,
  "avi_lsc_se_memory": 2048,
  "avi_lsc_se_disk": "25G",
  "avi_slack": {
    "name": "avi-slack",
    "path": "/home/ubuntu/python/control-script-avi-slack.py"
  },
  "tenants": [
    {
      "name": "automation",
      "local": true,
      "config_settings": {
        "tenant_vrf": false,
        "se_in_provider_context": true,
        "tenant_access_to_provider_se": true
      }
    },
    {
      "name": "dev",
      "local": true,
      "config_settings" : {
        "tenant_vrf": false,
        "se_in_provider_context": true,
        "tenant_access_to_provider_se": true
      }
    },
    {
      "name": "preprod",
      "local": true,
      "config_settings" : {
        "tenant_vrf": false,
        "se_in_provider_context": true,
        "tenant_access_to_provider_se": true
      }
    },
    {
      "name": "prod",
      "local": true,
      "config_settings" : {
        "tenant_vrf": false,
        "se_in_provider_context": false,
        "tenant_access_to_provider_se": false
      }
    }
  ],
  "roles": [
    {
      "allow_unlabelled_access": false,
      "filters": [
        {
          "enabled": true,
          "match_label": {
            "key": "app",
            "values": [
              "blue"
            ]
          },
          "match_operation": "ROLE_FILTER_EQUALS"
        }
      ],
      "name": "role-blue",
      "privileges": [
        {
          "resource": "PERMISSION_VIRTUALSERVICE",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOL",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOLGROUP",
          "type": "WRITE_ACCESS"
        }
      ]
    },
    {
      "allow_unlabelled_access": false,
      "filters": [
        {
          "enabled": true,
          "match_label": {
            "key": "app",
            "values": [
              "green"
            ]
          },
          "match_operation": "ROLE_FILTER_EQUALS"
        }
      ],
      "name": "role-green",
      "privileges": [
        {
          "resource": "PERMISSION_VIRTUALSERVICE",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOL",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOLGROUP",
          "type": "WRITE_ACCESS"
        }
      ]
    },
    {
      "allow_unlabelled_access": false,
      "filters": [
        {
          "enabled": true,
          "match_label": {
            "key": "app",
            "values": [
              "orange"
            ]
          },
          "match_operation": "ROLE_FILTER_EQUALS"
        }
      ],
      "name": "role-orange",
      "privileges": [
        {
          "resource": "PERMISSION_VIRTUALSERVICE",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOL",
          "type": "WRITE_ACCESS"
        },
        {
          "resource": "PERMISSION_POOLGROUP",
          "type": "WRITE_ACCESS"
        }
      ]
    },
    {
      "allow_unlabelled_access": true,
      "name": "role-ops",
      "privileges": [
        {
          "resource": "PERMISSION_VIRTUALSERVICE",
          "type": "READ_ACCESS"
        },
        {
          "resource": "PERMISSION_POOL",
          "type": "READ_ACCESS"
        },
        {
          "resource": "PERMISSION_POOLGROUP",
          "type": "READ_ACCESS"
        }
      ]
    }
  ],
  "users": [
    {
      "username": "automation",
      "name": "automation",
      "is_superuser": true,
      "default_tenant_ref": "",
      "access": [],
      "user_profile_ref": "/api/useraccountprofile?name=Default-User-Account-Profile"
    },
    {
      "access": [
        {
          "role_ref": "/api/role?name=role-blue",
          "tenant_ref": "/api/tenant?name=dev",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-blue",
          "tenant_ref": "/api/tenant?name=preprod",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-blue",
          "tenant_ref": "/api/tenant?name=prod",
          "all_tenants": false
        }

      ],
      "username": "blue",
      "name": "blue",
      "is_superuser": false,
      "default_tenant_ref": "/api/tenant?name=dev",
      "user_profile_ref": "/api/useraccountprofile?name=Default-User-Account-Profile"
    },
    {
      "access": [
        {
          "role_ref": "/api/role?name=role-green",
          "tenant_ref": "/api/tenant?name=dev",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-green",
          "tenant_ref": "/api/tenant?name=preprod",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-green",
          "tenant_ref": "/api/tenant?name=prod",
          "all_tenants": false
        }

      ],
      "username": "green",
      "name": "green",
      "is_superuser": false,
      "default_tenant_ref": "/api/tenant?name=dev",
      "user_profile_ref": "/api/useraccountprofile?name=Default-User-Account-Profile"
    },
    {
      "access": [
        {
          "role_ref": "/api/role?name=role-orange",
          "tenant_ref": "/api/tenant?name=dev",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-orange",
          "tenant_ref": "/api/tenant?name=preprod",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-orange",
          "tenant_ref": "/api/tenant?name=prod",
          "all_tenants": false
        }

      ],
      "username": "orange",
      "name": "orange",
      "is_superuser": false,
      "default_tenant_ref": "/api/tenant?name=dev",
      "user_profile_ref": "/api/useraccountprofile?name=Default-User-Account-Profile"
    },
    {
      "access": [
        {
          "role_ref": "/api/role?name=role-ops",
          "tenant_ref": "/api/tenant?name=dev",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-ops",
          "tenant_ref": "/api/tenant?name=preprod",
          "all_tenants": false
        },
        {
          "role_ref": "/api/role?name=role-ops",
          "tenant_ref": "/api/tenant?name=prod",
          "all_tenants": false
        }

      ],
      "username": "ops",
      "name": "ops",
      "is_superuser": false,
      "default_tenant_ref": "/api/tenant?name=prod",
      "user_profile_ref": "/api/useraccountprofile?name=Default-User-Account-Profile"
    }
  ],
  "avi_content_library_name": "content_library_avi_se",
  "avi_subdomain" : "app",
  "avi_config_repo": "https://github.com/tacobayle/ansibleAviConfig",
  "playbook_vcenter": "vcenter.yml",
  "tag_vcenter": "v2.27",
  "nsx_cloud_name": "dc1_nsx",
  "playbook_nsx": "nsx.yml",
  "tag_nsx": "v2.24",
  "service_engine_groups": [
    {
      "name": "Default-Group",
      "buffer_se": 0,
      "ha_mode": "HA_MODE_SHARED",
      "min_scaleout_per_vs": 1,
      "max_vs_per_se": 100,
      "vcenter_folder": "seg-Default-Group",
      "extra_shared_config_memory": 0,
      "vcpus_per_se": 2,
      "memory_per_se": 2048,
      "disk_per_se": 25,
      "realtime_se_metrics": {
        "enabled": true,
        "duration": 0
      }
    },
    {
      "name": "private",
      "ha_mode": "HA_MODE_SHARED_PAIR",
      "algo": "PLACEMENT_ALGO_PACKED",
      "min_scaleout_per_vs": 2,
      "max_vs_per_se": 100,
      "vcenter_folder": "seg-private",
      "buffer_se": 0,
      "extra_shared_config_memory": 0,
      "vcpus_per_se": 2,
      "memory_per_se": 2048,
      "disk_per_se": 25,
      "realtime_se_metrics": {
        "enabled": true,
        "duration": 0
      }
    },
    {
      "name": "public",
      "ha_mode": "HA_MODE_SHARED_PAIR",
      "algo": "PLACEMENT_ALGO_PACKED",
      "min_scaleout_per_vs": 2,
      "max_vs_per_se": 100,
      "vcenter_folder": "seg-public",
      "buffer_se": 0,
      "extra_shared_config_memory": 0,
      "vcpus_per_se": 3,
      "memory_per_se": 4096,
      "disk_per_se": 50,
      "realtime_se_metrics": {
        "enabled": true,
        "duration": 0
      }
    }
  ],
  "applicationprofile" : [
    {
      "name": "http_rate_limit_request_from_client",
      "type": "APPLICATION_PROFILE_TYPE_HTTP",
      "http_profile": {
        "allow_dots_in_header_name": false,
        "client_body_timeout": 30000,
        "client_header_timeout": 10000,
        "client_max_body_size": 0,
        "client_max_header_size": 12,
        "client_max_request_size": 48,
        "collect_client_tls_fingerprint": false,
        "connection_multiplexing_enabled": true,
        "detect_ntlm_app": true,
        "disable_keepalive_posts_msie6": true,
        "disable_sni_hostname_check": false,
        "enable_chunk_merge": true,
        "enable_fire_and_forget": false,
        "enable_request_body_buffering": false,
        "enable_request_body_metrics": false,
        "fwd_close_hdr_for_bound_connections": true,
        "hsts_enabled": false,
        "hsts_max_age": 365,
        "hsts_subdomains_enabled": true,
        "http2_profile": {
          "enable_http2_server_push": false,
          "http2_initial_window_size": 64,
          "max_http2_concurrent_pushes_per_connection": 10,
          "max_http2_concurrent_streams_per_connection": 128,
          "max_http2_control_frames_per_connection": 1000,
          "max_http2_empty_data_frames_per_connection": 1000,
          "max_http2_header_field_size": 4096,
          "max_http2_queued_frames_to_client_per_connection": 1000,
          "max_http2_requests_per_connection": 1000
        }
      },
      "dos_rl_profile": {
        "dos_profile": {
          "thresh_period": 5
        },
        "rl_profile": {
          "client_ip_requests_rate_limit": {
            "action": {
              "status_code": "HTTP_LOCAL_RESPONSE_STATUS_CODE_429",
              "type": "RL_ACTION_CLOSE_CONN"
            },
            "explicit_tracking": false,
            "fine_grain": false,
            "rate_limiter": {
              "burst_sz": 0,
              "count": 10,
              "period": 1
            }
          }
        }
      }
    },
    {
      "name": "http_rate_limit_request_per_cookie",
      "type": "APPLICATION_PROFILE_TYPE_HTTP",
      "http_profile": {
        "allow_dots_in_header_name": false,
        "client_body_timeout": 30000,
        "client_header_timeout": 10000,
        "client_max_body_size": 0,
        "client_max_header_size": 12,
        "client_max_request_size": 48,
        "collect_client_tls_fingerprint": false,
        "connection_multiplexing_enabled": true,
        "detect_ntlm_app": true,
        "disable_keepalive_posts_msie6": true,
        "disable_sni_hostname_check": false,
        "enable_chunk_merge": true,
        "enable_fire_and_forget": false,
        "enable_request_body_buffering": false,
        "enable_request_body_metrics": false,
        "fwd_close_hdr_for_bound_connections": true,
        "hsts_enabled": false,
        "hsts_max_age": 365,
        "hsts_subdomains_enabled": true,
        "http2_profile": {
          "enable_http2_server_push": false,
          "http2_initial_window_size": 64,
          "max_http2_concurrent_pushes_per_connection": 10,
          "max_http2_concurrent_streams_per_connection": 128,
          "max_http2_control_frames_per_connection": 1000,
          "max_http2_empty_data_frames_per_connection": 1000,
          "max_http2_header_field_size": 4096,
          "max_http2_queued_frames_to_client_per_connection": 1000,
          "max_http2_requests_per_connection": 1000
        }
      },
      "dos_rl_profile": {
        "dos_profile": {
          "thresh_period": 5
        },
        "rl_profile": {
          "http_header_rate_limits": [
            {
              "action": {
                "status_code": "HTTP_LOCAL_RESPONSE_STATUS_CODE_429",
                "type": "RL_ACTION_CLOSE_CONN"
              },
              "explicit_tracking": false,
              "fine_grain": false,
              "http_cookie": "shop_session-id",
              "rate_limiter": {
                "burst_sz": 0,
                "count": 20,
                "period": 1
              }
            }
          ]
        }
      }
    }
  ],
  "httppolicyset": [
    {
      "name": "http-request-header",
      "http_request_policy" : {
        "rules": [
          {
            "name": "Rule 1",
            "index": 1,
            "enable": true,
            "log": true,
            "all_headers": true,
            "hdr_action": [
              {
                "action": "HTTP_REPLACE_HDR",
                "hdr": {
                  "name": "X-MyHeader-ToBeReplaced",
                  "value": {
                    "val": "NSX-ALB",
                    "is_sensitive": false
                  }
                },
                "hdr_index": 1
              },
              {
                "action": "HTTP_REMOVE_HDR",
                "hdr": {
                  "name": "X-MyHeader-ToBeDeleted"
                },
                "hdr_index": 2
              },
              {
                "action": "HTTP_ADD_HDR",
                "hdr": {
                  "name": "X-MyHeader-ToBeAdded",
                  "value": {
                    "val": "avi",
                    "is_sensitive": false
                  }
                },
                "hdr_index": 3
              }
            ]
          }
        ]
      },
      "http_response_policy": {
        "rules": [
          {
            "name": "Rule 1",
            "index": 1,
            "enable": true,
            "log": true,
            "all_headers": true,
            "hdr_action": [
              {
                "action": "HTTP_ADD_HDR",
                "hdr": {
                  "name": "Content-Security-Policy",
                  "value": {
                    "val": "policy",
                    "is_sensitive": false
                  }
                },
                "hdr_index": 1
              }
            ]
          }
        ]
      }
    }
  ],
  "folder_app": "app-vms",
  "folder_client": "client-vms",
  "app_basename": "app-v1-0",
  "app_basename_second": "app-v2-0",
  "client_basename": "client0",
  "k8s_basename": "cluster0",
  "k8s_basename_vm": "node0",
  "k8s_node_cpu": 4,
  "k8s_node_memory": 8192,
  "k8s_node_disk": "15G",
  "k8s_apt_packages": ["jq"],
  "docker_version": "5:24.0.2-1~ubuntu.20.04~focal",
  "pod_cidr": "192.168.0.0/16",
  "app_apt_packages": ["docker.io", "apache2", "jq"],
  "docker_registry_repo_default_app" : "tacobayle/avi_app",
  "app_tcp_default" : 8080,
  "docker_registry_repo_waf" : "mutzel/all-in-one-hackazon:postinstall",
  "app_tcp_waf" : 8081,
  "app_cpu": 2,
  "app_memory": 2048,
  "client_cpu": 2,
  "client_memory": 2048,
  "tanzu": {
    "supervisor_starting_ip": 11,
    "supervisor_count_ip": 5,
    "workload_starting_ip": 61,
    "workload_count_ip": 30,
    "cert": "tanzu-cert",
    "supervisor_cluster": {
      "size": "TINY",
      "service_cidr": "10.96.0.0/23"
    },
    "content_library": {
      "subscription_url": "https://wp-content.vmware.com/v2/latest/lib.json",
      "name": "tanzu-cl",
      "type": "SUBSCRIBED",
      "automatic_sync_enabled": true,
      "on_demand": true
    },
    "storage_policy_name": "vSAN Default Storage Policy",
    "vm_classes": [
      "best-effort-2xlarge",
      "guaranteed-small",
      "best-effort-4xlarge",
      "best-effort-8xlarge",
      "best-effort-xsmall",
      "guaranteed-large",
      "guaranteed-medium",
      "best-effort-large",
      "best-effort-medium",
      "best-effort-xlarge",
      "guaranteed-2xlarge",
      "guaranteed-4xlarge",
      "best-effort-small",
      "guaranteed-8xlarge",
      "guaranteed-xlarge",
      "guaranteed-xsmall"
    ],
    "namespaces": [
      {
        "name": "ns1"
      },
      {
        "name": "ns2",
        "namespace_cidr": "100.100.66.0/23",
        "namespace_tier0": "tier0-01",
        "prefix_per_namespace": "26",
        "ingress_cidr": "100.100.134.0/24"
      },
      {
        "name": "ns3"
      }
    ],
    "tkc_clusters": [
      {
        "name": "ns1-cluster-1-provider",
        "namespace_ref": "ns1",
        "k8s_version": "v1.29.4---vmware.3-fips.1-tkg.1",
        "control_plane_count": 1,
        "vm_class": "best-effort-small",
        "workers_count": 1,
        "services_cidrs": ["10.97.0.0/24"],
        "pods_cidrs": ["10.245.0.0/21"],
        "avi_tenant_name": "ns1",
        "se_in_provider_context": true
      },
      {
        "name": "ns2-cluster-1-tenant",
        "namespace_ref": "ns2",
        "k8s_version": "v1.29.4---vmware.3-fips.1-tkg.1",
        "control_plane_count": 1,
        "vm_class": "best-effort-small",
        "workers_count": 1,
        "services_cidrs": ["10.97.0.0/24"],
        "pods_cidrs": ["10.245.0.0/21"],
        "avi_tenant_name": "ns2",
        "se_in_provider_context": false
      },
      {
        "name": "ns3-cluster-1",
        "namespace_ref": "ns3",
        "k8s_version": "v1.29.4---vmware.3-fips.1-tkg.1",
        "control_plane_count": 1,
        "vm_class": "best-effort-small",
        "workers_count": 1,
        "services_cidrs": ["10.97.0.0/24"],
        "pods_cidrs": ["10.245.0.0/21"],
        "avi_tenant_name": "ns3",
        "se_in_provider_context": true
      }
    ]
  }
}