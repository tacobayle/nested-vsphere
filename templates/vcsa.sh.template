#!/bin/bash
#
jsonFile="${jsonFile}"
log_file="/tmp/vcsa.log"
deployment_name=$(jq -c -r .metadata.name $jsonFile)
cidr_mgmt=$(jq -c -r --arg arg "MANAGEMENT" '.spec.networks[] | select( .type == $arg).cidr' $jsonFile | cut -d"/" -f1)
if [[ ${cidr_mgmt} =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.[0-9]{1,3}$ ]] ; then
  cidr_mgmt_three_octets="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${BASH_REMATCH[3]}"
fi
ip_vcsa=$(jq -c -r '.spec.vsphere.ip' $jsonFile)
ip_gw=$(jq -c -r .spec.gw.ip $jsonFile)
domain=$(jq -c -r .spec.domain $jsonFile)


echo '------------------------------------------------------------' | tee -a ${log_file}
echo "Creation of VCSA  - This should take about 45 minutes" | tee -a ${log_file}
iso_url=$(jq -c -r .spec.vsphere.iso_url $jsonFile)
download_file_from_url_to_location "${iso_url}" "/home/ubuntu/$(basename ${iso_url})" "VCSA ISO"
if [ -z "${SLACK_WEBHOOK_URL}" ] ; then echo "ignoring slack update" ; else curl -X POST -H 'Content-type: application/json' --data '{"text":"'$(date "+%Y-%m-%d,%H:%M:%S")', '${deployment_name}': ISO VCSA downloaded"}' ${SLACK_WEBHOOK_URL} >/dev/null 2>&1; fi
xorriso -ecma119_map lowercase -osirrox on -indev "/home/ubuntu/$(basename ${iso_url})" -extract / /tmp/vcenter_cdrom_mount
cp -r /tmp/vcenter_cdrom_mount/vcsa-cli-installer/templates/install/vCSA_with_cluster_on_ESXi.json /nested-vsphere/templates/
rm -fr /tmp/vcenter_cdrom
mkdir -p /tmp/vcenter_cdrom
cp -r /tmp/vcenter_cdrom_mount/* /tmp/vcenter_cdrom
rm -fr /tmp/vcenter_cdrom_mount
contents="$(jq '.new_vcsa.esxi.hostname = "esxi01.'${domain}'" |
                .new_vcsa.esxi.username = "root" |
                .new_vcsa.esxi.password = "'${GENERIC_PASSWORD}'" |
                .new_vcsa.esxi.VCSA_cluster.datacenter = "dc1" |
                .new_vcsa.esxi.VCSA_cluster.cluster = "cluster1" |
                .new_vcsa.esxi.VCSA_cluster.disks_for_vsan.cache_disk[0] = "mpx.vmhba0:C0:T1:L0" |
                .new_vcsa.esxi.VCSA_cluster.disks_for_vsan.capacity_disk[0] = "mpx.vmhba0:C0:T2:L0" |
                .new_vcsa.esxi.VCSA_cluster.enable_vsan_esa = false |
                .new_vcsa.esxi.VCSA_cluster.storage_pool.single_tier[0] = "mpx.vmhba0:C0:T2:L0" |
                .new_vcsa.appliance.thin_disk_mode = true |
                .new_vcsa.appliance.deployment_option = "small" |
                .new_vcsa.appliance.name = "'${vcsa_name}'" |
                .new_vcsa.network.ip = "'${cidr_mgmt_three_octets}'.'${ip_vcsa}'" |
                .new_vcsa.network.dns_servers[0] = "'${ip_gw}'" |
                .new_vcsa.network.prefix = "'$(jq -c -r --arg arg "MANAGEMENT" '.spec.networks[] | select( .type == $arg).cidr' $jsonFile | cut -d"/" -f2)'" |
                .new_vcsa.network.gateway = "'$(jq -c -r --arg arg "MANAGEMENT" '.spec.networks[] | select( .type == $arg).gw' $jsonFile)'" |
                .new_vcsa.network.system_name = "'${vcsa_name}'.'${domain}'" |
                .new_vcsa.os.password = "'${GENERIC_PASSWORD}'" |
                .new_vcsa.os.ntp_servers = "'${ip_gw}'" |
                .new_vcsa.os.ssh_enable = true |
                .new_vcsa.sso.password = "'${GENERIC_PASSWORD}'" |
                .new_vcsa.sso.domain_name = "'$(jq -r .spec.vsphere.ssoDomain $jsonFile)'" |
                .ceip.settings.ceip_enabled = 'false'' /nested-vsphere/templates/vCSA_with_cluster_on_ESXi.json)"
echo "${contents}" | jq 'del (.new_vcsa.esxi.VCSA_cluster.storage_pool.single_tier)' | tee /home/ubuntu/vcenter_config.json
/tmp/vcenter_cdrom/vcsa-cli-installer/lin64/vcsa-deploy install --accept-eula --acknowledge-ceip --no-esx-ssl-verify /home/ubuntu/vcenter_config.json | tee -a ${log_file}
if [ -z "${SLACK_WEBHOOK_URL}" ] ; then echo "ignoring slack update" ; else curl -X POST -H 'Content-type: application/json' --data '{"text":"'$(date "+%Y-%m-%d,%H:%M:%S")', '${deployment_name}': VCSA installed"}' ${SLACK_WEBHOOK_URL} >/dev/null 2>&1; fi